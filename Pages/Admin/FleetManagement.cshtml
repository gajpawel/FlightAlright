@page
@model FlightAlright.Pages.Admin.FleetManagementModel
@{
    ViewData["Title"] = "Zarządzanie Flotą";
}

<!-- _VerticalMenu.cshtml -->
@{
    string GetActiveClass(string pageName)
    {
        return ViewContext.RouteData.Values["Page"].ToString().EndsWith(pageName) ? "active" : "";
    }
}

<div class="row">
    <div class="col-md-auto">
        <div class="admin-menu">
            <a asp-page="./AdminProfile" class="@GetActiveClass("/AdminProfile")">Konto</a>
            <a asp-page="./PersonelManagement" class="@GetActiveClass("/PersonelManagement")">Personel</a>
            <a asp-page="./AirportManagement" class="@GetActiveClass("/AirportManagement")">Lotniska</a>
            <a asp-page="./FleetManagement" class="@GetActiveClass("/FleetManagement")">Flota</a>
            <a asp-page="./FlightManagement" class="@GetActiveClass("/FlightManagement")">Loty</a>
        </div>
    </div>
    <div class="col bg-light">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
        }

        <!--add to fleet-->
        <div class="container">
            <div class="row">
                <form method="post" asp-page-handler="SelectBrand" class="col-md-3">
                    <div class="form-group">
                        <label for="selectbrand">Marka:</label>
                        <select id="selectbrand" class="form-control" asp-for="SelectedBrandId" asp-items="Model.brands" name="SelectedBrandId" onchange="this.form.submit()">
                            <option value="">-- Wybierz markę --</option>
                        </select>
                    </div>
                </form>

                <form method="post" asp-page-handler="AddToFleet" class="col-md-9">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Model:</label>
                                <select class="form-control" asp-for="SelectedModelId" asp-items="Model.models">
                                    <option value="">-- Wybierz model --</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="count">Ilość</label>
                                <input id="count" class="form-control" type="number" asp-for="count" value="1" min="1" />
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group" style="margin-top: 32px;">
                                <button id="add_to_fleet_button" type="submit" class="btn btn-primary">Dodaj do floty</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <br />

        <!--add to selection-->
        <form method="post" asp-page-handler="AddModel">
            <div class="row">
                <div class="col">
                    <label for="brand">Marka: </label>
                    <input id="brand" class="form-control" type="text" asp-for="NewBrandName" />
                    <select class="form-control" asp-for="SelectedBrandId" asp-items="Model.brands">
                        <option value="">-- Lub wybierz istniejącą --</option>
                    </select>
                </div>
                <div class="col">
                    <label for="model">Model: </label>
                    <input id="model" class="form-control" type="text" asp-for="NewModelName" required />
                </div>
                <div class="col">
                    <label for="range">Zasięg: </label>
                    <input id="range" class="form-control" type="number" value="100" min="0" asp-for="maxRange" />
                </div>
                <div class="col">
                    <div class="row">
                        <button id="add_plane_button" type="submit" class="btn btn-primary">Dodaj do wyboru</button>
                    </div>
                    <div class="row">
                        <button type="button" class="btn btn-primary mt-2" onclick="addOption()">Dodaj klasę</button>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="row" id="optionsContainer">
                    <!--classes will be here-->
                </div>
            </div>
        </form>
        <br />
        <!-- Tab Navigation -->
        <ul class="nav nav-tabs" id="tableTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="fleet-tab" data-bs-toggle="tab" href="#fleetTab" role="tab">Flota</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="planeSelection-tab" data-bs-toggle="tab" href="#planeSelectionTab" role="tab">Dostępne modele samolotów</a>
            </li>
            <li class="nav-item d-none" id="editTabItem">
                <a class="nav-link" id="edit-tab" data-bs-toggle="tab" href="#editTab" role="tab">Edycja</a>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content mt-4" id="tableTabContent">

            <!-- Flota Table -->
            <div class="tab-pane fade show active" id="fleetTab" role="tabpanel">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Status</th>
                            <th>Marka</th>
                            <th>Model</th>
                            <th>Zasięg</th>
                            <th>Akcja</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var plane in Model.fleet)
                        {
                            <tr>
                                <td>@plane.Id</td>
                                <td>@(plane.Status ?? ' ')</td>
                                <td>@plane.Brand?.Name</td>
                                <td>@plane.Brand?.Model</td>
                                <td>@plane.Brand?.MaxDistance</td>
                                <td>
                                    <form method="post" asp-page-handler="ChangeStatus">
                                        <input type="hidden" name="planeId" value="@plane.Id" />
                                        <input type="hidden" name="status" value="D" />
                                        <button class="btn btn-success btn-sm" type="submit" @(plane.Status == 'D' ? "disabled" : "")>Aktywuj</button>
                                    </form>
                                    <form method="post" asp-page-handler="ChangeStatus">
                                        <input type="hidden" name="planeId" value="@plane.Id" />
                                        <input type="hidden" name="status" value="N" />
                                        <button class="btn btn-warning btn-sm" type="submit" @(plane.Status == 'N' ? "disabled" : "")>Dezaktywuj</button>
                                    </form>
                                    <form method="post" asp-page-handler="ChangeStatus">
                                        <input type="hidden" name="planeId" value="@plane.Id" />
                                        <input type="hidden" name="status" value="S" />
                                        <button class="btn btn-danger btn-sm" type="submit" @(plane.Status == 'S' ? "disabled" : "")>Serwis</button>
                                    </form>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            </div>

            <!-- Wybór Samolotu Table -->
            <div class="tab-pane fade" id="planeSelectionTab" role="tabpanel">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Marka</th>
                            <th>Model</th>
                            <th>Zasięg</th>
                            <th>Akcja</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var plane in Model.planeSelection)
                        {
                            <tr>
                                <td>@plane.Id</td>
                                <td>@plane.Name</td>
                                <td>@plane.Model</td>
                                <td>@plane.MaxDistance</td>
                                <td>
                                    <button class="btn btn-sm btn-primary"
                                            onclick="editPlaneModel(@plane.Id, '@plane.Name', '@plane.Model', @plane.MaxDistance)">
                                        Edytuj
                                    </button>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Edit tab -->
            <!-- Replace the edit tab content -->
            <div class="tab-pane fade" id="editTab" role="tabpanel">
                <h5 id="editTitle">Edytuj samolot</h5>
                <form method="post" asp-page-handler="EditPlaneModel" id="mainEditForm">
                    <input type="hidden" name="EditModel.Id" id="editModelId" />
                    <div class="mb-3">
                        <label class="form-label">Nazwa linii</label>
                        <input name="EditModel.Name" id="editModelName" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Model</label>
                        <input name="EditModel.Model" id="editModelModel" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Zasięg</label>
                        <input name="EditModel.MaxDistance" id="editModelMaxDistance" type="number" class="form-control" required min="1" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Klasy</label>
                        <div id="editedClassesContainer"></div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Nowe klasy</label>
                        <div id="newClassesContainer"></div>
                        <button type="button" class="btn btn-secondary mb-2" onclick="addNewClass()">Dodaj nową klasę</button>
                    </div>

                    <button type="submit" class="btn btn-primary">Zapisz zmiany</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editPlaneModel(id, name, model, maxDistance) {
            document.getElementById("editTabItem").classList.remove("d-none");
            document.getElementById("editTitle").innerText = "Edytuj samolot (Model)";

            // Set form values
            document.getElementById("editModelId").value = id;
            document.getElementById("editModelName").value = name;
            document.getElementById("editModelModel").value = model;
            document.getElementById("editModelMaxDistance").value = maxDistance;

            // Load classes
            fetch(`/Admin/FleetManagement?handler=ClassesForBrand&brandId=${id}`)
                .then(response => response.json())
                .then(classes => {
                    const container = document.getElementById("editedClassesContainer");
                    container.innerHTML = classes.map((cls, i) => `
                        <div class="mb-2 d-flex gap-2">
                            <input type="hidden" name="EditModel.EditedClasses[${i}].Id" value="${cls.id}" />
                            <input class="form-control w-50" name="EditModel.EditedClasses[${i}].Name" value="${cls.name}" required />
                            <input class="form-control w-25" name="EditModel.EditedClasses[${i}].SeatsNumber" type="number" min="1" value="${cls.seatsNumber}" required />
                        </div>
                    `).join('');

                    new bootstrap.Tab(document.querySelector('#edit-tab')).show();
                });
        }

        let newClassIndex = 0;
        function addNewClass() {
            const container = document.getElementById("newClassesContainer");
            const div = document.createElement("div");
            div.classList.add("mb-2", "d-flex", "gap-2");

            div.innerHTML = `
                <input class="form-control w-50" name="EditModel.NewClasses[${newClassIndex}].Name" placeholder="Nazwa klasy" />
                <input class="form-control w-25" name="EditModel.NewClasses[${newClassIndex}].SeatsNumber" type="number" min="1" value="1" placeholder="Ilość miejsc" />
                <button type="button" class="btn btn-danger" onclick="this.parentElement.remove()">❌</button>
            `;
            container.appendChild(div);
            newClassIndex++;
        }

        function submitEditForm() {
            const editForm = document.getElementById('editModelForm');

            // Collect all form data
            const formData = new FormData(editForm);

            // Create a new form for submission
            const submitForm = document.getElementById('editPlaneModelForm');

            // Clear any existing dynamic fields
            while (submitForm.querySelector('[name^="EditModel.EditedClasses"]')) {
                submitForm.querySelector('[name^="EditModel.EditedClasses"]').remove();
            }

            while (submitForm.querySelector('[name^="EditModel.NewClasses"]')) {
                submitForm.querySelector('[name^="EditModel.NewClasses"]').remove();
            }

            // Set the basic model fields
            document.getElementById('editModelId').value = formData.get('EditModel.Id');
            document.getElementById('editModelName').value = formData.get('EditModel.Name');
            document.getElementById('editModelModel').value = formData.get('EditModel.Model');
            document.getElementById('editModelMaxDistance').value = formData.get('EditModel.MaxDistance');

            // Add all edited classes
            const editedClassFields = editForm.querySelectorAll('[name^="EditModel.EditedClasses"]');
            editedClassFields.forEach(field => {
                const clone = field.cloneNode(true);
                submitForm.appendChild(clone);
            });

            // Add all new classes
            const newClassFields = editForm.querySelectorAll('[name^="EditModel.NewClasses"]');
            newClassFields.forEach(field => {
                const clone = field.cloneNode(true);
                submitForm.appendChild(clone);
            });

            // Submit the form
            submitForm.action = '?handler=EditPlaneModel';
            submitForm.submit();
        }
    </script>

    <script>
        let optionIndex = 0;

        function addOption() {
            const container = document.getElementById("optionsContainer");

            const row = document.createElement("div");
            row.classList.add("option-row", "mb-2");
            row.innerHTML = `
                <input name="classes[${optionIndex}].Name" placeholder="Nazwa klasy" class="form-control d-inline-block w-25" />
                <input name="classes[${optionIndex}].SeatsNumber" placeholder="Ilość miejsc" type="number" min="1" class="form-control d-inline-block w-25" />
                <button type="button" class="btn btn-danger" onclick="removeOption(this)">❌</button>
            `;
            container.appendChild(row);
            optionIndex++;
        }

        function reindexOptions() {
            const rows = document.querySelectorAll("#optionsContainer .option-row");
            rows.forEach((row, i) => {
                row.querySelectorAll("input").forEach(input => {
                    if (input.name.includes(".Name")) input.name = `classes[${i}].Name`;
                    if (input.name.includes(".SeatsNumber")) input.name = `classes[${i}].SeatsNumber`;
                });
            });
            optionIndex = rows.length;
        }

        function removeOption(button) {
            const row = button.parentElement;
            row.remove();
            reindexOptions();
        }
    </script>
}